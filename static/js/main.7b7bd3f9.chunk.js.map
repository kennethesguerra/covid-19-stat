{"version":3,"sources":["utils/index.js","components/charts/SummaryChart.js","components/CaseStatus.js","components/Preloader.js","components/Home.js","components/Worldwide.js","components/charts/DailyLineChart.js","components/HistoryTable.js","components/GlobalDailyStatus.js","components/CountryDailyStatus.js","App.js","serviceWorker.js","index.js"],"names":["formatNumber","num","toLocaleString","navigator","language","minimumFractionDigits","getLocation","axios","get","then","res","countryCode","data","country","countryName","country_name","getStatusInCountry","key","a","iso3","details","name","confirmed","value","recovered","deaths","lastUpdate","catch","error","console","log","SummaryChart","datasets","active","backgroundColor","labels","options","responsive","CaseStatus","active_percentage","recovered_percentage","death_percentage","className","dateString","dt","Date","getMonth","toString","padStart","getDate","getFullYear","getHours","getMinutes","getSeconds","formatDate","toFixed","Preloader","Home","state","world","userCountry","userCountryCode","userCountryName","location","this","setState","worldSummary","Object","entries","length","to","type","userCountrySummary","Component","Worldwide","countries","map","push","i","countriesList","countryCase","DailyLineChart","dailyCases","dailyCase","txtDate","totalConfirmed","totalDeaths","totalRecovered","newCases","parseInt","label","borderColor","HistoryTable","arrData","r","newRecoveries","newDeaths","historyList","GlobalDailyStatus","currDate","setDate","arrCases","forEach","response","dailyCasesData","CountryDailyStatus","id","countryRegion","App","basename","href","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7b7bd3f9.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const formatNumber = (num) => {\r\n  if (typeof num !== \"undefined\") {\r\n    return num.toLocaleString(navigator.language, { minimumFractionDigits: 0 });\r\n  }\r\n  return 0;\r\n}\r\n\r\n\r\nexport const formatDate = (dateString) => {\r\n  const dt = new Date(dateString);\r\n  return `${(dt.getMonth() + 1).toString().padStart(2, '0')}/${dt\r\n    .getDate()\r\n    .toString()\r\n    .padStart(2, '0')}/${dt\r\n    .getFullYear()\r\n    .toString()\r\n    .padStart(4, '0')} ${dt\r\n    .getHours()\r\n    .toString()\r\n    .padStart(2, '0')}:${dt\r\n    .getMinutes()\r\n    .toString()\r\n    .padStart(2, '0')}:${dt\r\n    .getSeconds()\r\n    .toString()\r\n    .padStart(2, '0')}`;\r\n};\r\n\r\nexport const getLocation = () => {\r\n  return axios.get('https://ipapi.co/json')\r\n    .then((res) => {\r\n      return {\r\n        countryCode: res.data.country,\r\n        countryName: res.data.country_name\r\n      }\r\n    });\r\n}\r\n\r\nexport const getStatusInCountry = async (country, key) => {\r\n  if (typeof country.iso3 !== \"undefined\") {\r\n    return await axios.get('https://covid19.mathdro.id/api/countries/' + country.iso3)\r\n          .then(details => {\r\n            let name = country.name;\r\n            let confirmed = details.data.confirmed.value;\r\n            let recovered = details.data.recovered.value;\r\n            let deaths = details.data.deaths.value;\r\n            let lastUpdate = details.data.lastUpdate.value;\r\n\r\n            return {key, name, confirmed, recovered, deaths, lastUpdate}\r\n          })\r\n          .catch (error => {\r\n            console.log(error);\r\n          })\r\n  }\r\n}","/**\r\n * Summary Component\r\n * \r\n * This component displays a Pie Chart to demonstrate the \r\n * status of the outbreak globally or regionally\r\n * \r\n * @author Mark Kenneth Esguerra <esguerrakenneth@gmail.com>\r\n */\r\nimport React from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nconst SummaryChart = ({recovered, deaths, active}) => {\r\n\r\n  const data = {\r\n      datasets: [{\r\n          data: [active, recovered, deaths],\r\n          backgroundColor: [\r\n            'rgb(251,192,45)',\r\n            'rgba(6, 151, 79, 0.8)', \r\n            'rgba(220, 19, 19, 0.9)'\r\n          ]\r\n      }],\r\n      labels: [\r\n          'Active',\r\n          'Recovered',\r\n          'Deaths'\r\n      ], \r\n  };\r\n\r\n  return (\r\n    <div>\r\n        <Pie data={data} options={{\r\n            responsive: true \r\n         }} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SummaryChart;\r\n","import React from 'react';\r\nimport { formatDate, formatNumber } from '../utils/'; \r\nimport SummaryChart from './charts/SummaryChart';\r\n\r\nconst CaseStatus = ({details}) => {\r\n  let lastUpdate = details.lastUpdate;\r\n  let confirmed = details.confirmed.value;\r\n  let recovered = details.recovered.value;\r\n  let deaths = details.deaths.value;\r\n\r\n  let active = confirmed - (recovered + deaths)\r\n\r\n  let active_percentage = active / confirmed * 100;\r\n  let recovered_percentage = (recovered / confirmed) * 100;\r\n  let death_percentage = (deaths / confirmed) * 100;\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"center grey-text\">Last updated at <b>{formatDate(lastUpdate)}</b></p>\r\n      <div className=\"col s12 m5\">\r\n        <ul className=\"collection white-text darken-2\">\r\n          <li className=\"collection-item yellow darken-2\">\r\n            <div className=\"row\">\r\n              <div className=\"col s6 m6\">\r\n                <h6 className=\"left\"><b>CONFIRMED CASES: </b></h6>\r\n              </div>\r\n              <div className=\"col s6 m6\">\r\n                <h6 className=\"right\">{formatNumber(confirmed)} </h6>\r\n              </div>\r\n            </div>\r\n          </li>\r\n          <li className=\"collection-item green darken-3\">\r\n            <div className=\"row\">\r\n              <div className=\"col s6 m6\">\r\n                <h6 className=\"left\"><b>RECOVERED: </b></h6>\r\n              </div>\r\n              <div className=\"col s6 m6\">\r\n                <h6 className=\"right\">{formatNumber(recovered)} ({recovered_percentage.toFixed(2)}%) </h6>\r\n              </div>\r\n            </div>\r\n          </li>\r\n          <li className=\"collection-item red darken-3\">\r\n            <div className=\"row\">\r\n              <div className=\"col s6 m6\">\r\n                <h6 className=\"left\"><b>DEATHS: </b></h6>\r\n              </div>\r\n              <div className=\"col s6 m6\">\r\n                <h6 className=\"right\">{formatNumber(deaths)} ({death_percentage.toFixed(2)}%) </h6>\r\n              </div>\r\n            </div>\r\n          </li>\r\n          <li className=\"collection-item grey darken-1\">\r\n          <div className=\"row\">\r\n              <div className=\"col s6 m6\">\r\n                <h6 className=\"left\"><b>ACTIVE CASES: </b></h6>\r\n              </div>\r\n              <div className=\"col s6 m6\">\r\n                <h6 className=\"right\">{formatNumber(active)} ({active_percentage.toFixed(2)}%) </h6>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"col s12 m7\">\r\n        <SummaryChart active={active} recovered={recovered} deaths={deaths}  />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CaseStatus","import React from 'react';\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className=\"row loader-margin\">\r\n      <div className=\"progress\">\r\n        <div className=\"indeterminate\"></div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Preloader","/**\r\n * Home Component\r\n * \r\n * This component serves as the home page of the site. The homepage \r\n * displays the Global status and the status of the country where\r\n * viewer is located using IP Address Lookup\r\n * \r\n * @author Mark Kenneth Esguerra <esguerrakenneth@gmail.com>\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport CaseStatus from './CaseStatus';\r\nimport { Link } from 'react-router-dom';\r\nimport Preloader from './Preloader';\r\nimport { getLocation } from '../utils/';\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    world: {}, \r\n    userCountry: {},\r\n    userCountryCode: '',\r\n    userCountryName: ''\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    const location = await getLocation();\r\n    \r\n    this.setState({\r\n      userCountryCode: location.countryCode, \r\n      userCountryName: location.countryName\r\n    });\r\n    \r\n    axios.get('https://covid19.mathdro.id/api')\r\n      .then(res => {\r\n        this.setState({\r\n          world: res.data\r\n        })\r\n      });\r\n\r\n    axios.get('https://covid19.mathdro.id/api/countries/' + this.state.userCountryCode)\r\n      .then(res => {\r\n        this.setState({\r\n          userCountry: res.data\r\n        })\r\n      });\r\n  }\r\n  \r\n  render() {\r\n    const { world } = this.state;\r\n    const { userCountry } = this.state;\r\n    const { userCountryName } = this.state;\r\n    \r\n    const worldSummary = Object.entries(world).length ? (\r\n      <div>\r\n        <div className=\"row\">\r\n          <h4 className=\"center grey-text text-darken-2\">Global</h4>\r\n          <CaseStatus details={world} />\r\n        </div>\r\n        <div className=\"row center\">\r\n          <div className=\"col s12 m12\">\r\n            <Link to='/daily' >\r\n              <button className=\"btn waves-effect waves-light\" type=\"button\" name=\"action\">\r\n                See Global Daily Report Chart\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"row center\">\r\n          <Link to='/worldwide' >\r\n            <button className=\"btn waves-effect waves-light\" type=\"button\" name=\"action\">\r\n              See cases by countries\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <Preloader />\r\n    )\r\n\r\n    const userCountrySummary = Object.entries(userCountry).length ? (\r\n      <div className=\"row\">\r\n        <h5 className=\"center grey-text text-darken-2\">{ userCountryName }</h5>\r\n        <p className=\"grey-text text-darken-2 center\">(Viewer's country)</p>\r\n        <CaseStatus details={userCountry} />\r\n        <div className=\"row center\">\r\n          <div className=\"col s12 m12\">\r\n            <Link to='/daily/country' >\r\n              <button className=\"btn waves-effect waves-light\" type=\"button\" name=\"action\">\r\n                See {userCountryName} Daily Report Chart\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <div></div>\r\n    )\r\n      \r\n    return (\r\n\r\n      <div className=\"summary\">\r\n        {worldSummary}\r\n        <hr />\r\n        {userCountrySummary}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home","/**\r\n * Worldwide Component\r\n * \r\n * This component serves all countries status of the outbreak\r\n * \r\n * @author Mark Kenneth Esguerra <esguerrakenneth@gmail.com>\r\n */\r\nimport React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport { formatNumber, getStatusInCountry } from '../utils/';\r\nimport Preloader from './Preloader';\r\n\r\nclass Worldwide extends Component {\r\n  state = {\r\n    countries: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    let countries = [];\r\n    await axios.get('https://covid19.mathdro.id/api/countries')\r\n      .then( res => {\r\n        res.data.countries.map(country => {\r\n          countries.push(country);\r\n        })\r\n      });\r\n   \r\n    for (let i = 0; i < countries.length; i++) {\r\n      if (typeof countries[i].iso3 !== \"undefined\") {\r\n        const data = await getStatusInCountry(countries[i], i);\r\n\r\n        if (typeof data !== \"undefined\") {  \r\n          this.setState({\r\n            countries: [...this.state.countries, data]\r\n          })\r\n        }\r\n      } \r\n    }\r\n  }\r\n  render() {\r\n    const {countries} = this.state;\r\n    const countriesList = countries.length ? (\r\n      countries.map((countryCase) => {\r\n        return (\r\n          <tr>\r\n            <td>{countryCase.name}</td>\r\n            <td className=\"center\">{formatNumber(countryCase.confirmed)}</td>\r\n            <td className=\"center\">{formatNumber(countryCase.recovered)}</td>\r\n            <td className=\"center\">{formatNumber(countryCase.deaths)}</td>\r\n            <td className=\"center\">{formatNumber(countryCase.confirmed - (countryCase.recovered + countryCase.deaths))}</td>\r\n          </tr>\r\n        )\r\n      })\r\n    ) : (\r\n      <Preloader />\r\n    )\r\n    \r\n    return (\r\n      <div>\r\n        <h5>Cases per Country/Territory </h5>\r\n        <hr/>\r\n        <table className=\"highlight striped responsive-table\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"center\">Country</th>\r\n              <th className=\"center\">Confirmed</th>\r\n              <th className=\"center\">Recovered</th>\r\n              <th className=\"center\">Deaths</th>\r\n              <th className=\"center\">Active Cases</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {countriesList}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Worldwide","\r\nimport React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst DailyLineChart = ({dailyCases}) => {\r\n\r\n  const labels = [];\r\n  const confirmed = [];\r\n  const deaths = [];\r\n  const recovered = [];\r\n  const active = [];\r\n\r\n  dailyCases.map((dailyCase) => {\r\n    labels.push(dailyCase.txtDate);\r\n    confirmed.push(dailyCase.totalConfirmed);\r\n    deaths.push(dailyCase.totalDeaths);\r\n    recovered.push(dailyCase.totalRecovered);\r\n\r\n    const newCases = parseInt(dailyCase.totalConfirmed) - (parseInt(dailyCase.totalRecovered) + parseInt(dailyCase.totalDeaths));\r\n    active.push(newCases);\r\n  }); \r\n\r\n  const data = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: 'Confirmed', \r\n        borderColor: \"yellow\",\r\n        backgroundColor: \"rgba(0, 0, 0, 0.0)\", \r\n        data: confirmed\r\n      },\r\n      {\r\n        label: 'Active', \r\n        borderColor: \"grey\",\r\n        backgroundColor: \"rgba(0, 0, 0, 0.0)\", \r\n        data: active  \r\n      },\r\n      {\r\n        label: 'Recovered', \r\n        borderColor: \"green\",\r\n        backgroundColor: \"rgba(0, 0, 0, 0.0)\", \r\n        data: recovered\r\n      },\r\n      {\r\n        label: 'Deaths', \r\n        borderColor: \"red\",\r\n        backgroundColor: \"rgba(0, 0, 0, 0.0)\", \r\n        data: deaths\r\n      }\r\n    ],\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Line data={data} />\r\n      <h6><b>Are we flattening the curve?</b></h6>\r\n      <p>\r\n        For a pandemic like COVID-19, institutions have prioritized measures that will \"flatten the curve\". This means \r\n        managing the daily number of cases to a level that can be accommodated by a country's health care system. In this \r\n        graph, such scenario will have happened if the <span className=\"grey white-text\">gray</span> line shows \r\n        a flatter and more downward trend over time rather than a continuous upward slope. And we hope the green line would \r\n        go up\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DailyLineChart\r\n","import React from 'react'\r\nimport Preloader from './Preloader';\r\nimport { formatNumber } from '../utils/';\r\n\r\nconst HistoryTable = ({dailyCases}) => {\r\n  let arrData = [];\r\n\r\n  for (let i = dailyCases.length; i >= 0; i--) {\r\n    if (typeof dailyCases[i] !== \"undefined\") {\r\n      let r = i - 1;\r\n\r\n      if (r >= 0) {\r\n        let data = {\r\n          txtDate: dailyCases[i].txtDate,\r\n          newCases: dailyCases[i].totalConfirmed - dailyCases[r].totalConfirmed, \r\n          totalConfirmed: dailyCases[i].totalConfirmed,\r\n          newRecoveries: dailyCases[i].totalRecovered - dailyCases[r].totalRecovered, \r\n          totalRecovered: dailyCases[i].totalRecovered,\r\n          newDeaths: dailyCases[i].totalDeaths - dailyCases[r].totalDeaths, \r\n          totalDeaths: dailyCases[i].totalDeaths,\r\n        }\r\n        arrData.push(data);\r\n      }\r\n    }\r\n  }\r\n\r\n  const historyList = arrData.length ? (\r\n    arrData.map((data, key) => {\r\n      return(\r\n        <tr key={key}>\r\n          <td className=\"center\">{data.txtDate}</td>\r\n          <td className=\"center\">{formatNumber(data.totalConfirmed)}</td>\r\n          <td className=\"center\"><b>+{formatNumber(data.newCases)}</b></td>\r\n          <td className=\"center\">{formatNumber(data.totalRecovered)}</td>\r\n          <td className=\"center\"><b>+{formatNumber(data.newRecoveries)}</b></td>\r\n          <td className=\"center\">{formatNumber(data.totalDeaths)}</td>\r\n          <td className=\"center\"><b>+{formatNumber(data.newDeaths)}</b></td>\r\n        </tr>\r\n      )\r\n    })\r\n  ) : (\r\n    <Preloader />\r\n  )\r\n\r\n  return (\r\n    <div> \r\n      <h5>Historical Data</h5>\r\n      <table className=\"highlight striped responsive-table\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"center\">Date</th>\r\n              <th className=\"center\">Total Cases</th>\r\n              <th className=\"center\">New Cases</th>\r\n              <th className=\"center\">Total Recoveries</th>\r\n              <th className=\"center\">New Recoveries</th>\r\n              <th className=\"center\">Total Deaths </th>\r\n              <th className=\"center\">New Deaths</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {historyList}\r\n          </tbody>\r\n        </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HistoryTable","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Preloader from './Preloader';\r\nimport DailyLineChart from './charts/DailyLineChart';\r\nimport HistoryTable from './HistoryTable';\r\n\r\nclass GlobalDailyStatus extends Component {\r\n\r\n  state = {\r\n    dailyCases: []\r\n  }\r\n  async componentDidMount() {\r\n    let currDate = new Date();\r\n    currDate.setDate(currDate.getDate() - 25);\r\n    let arrCases = [];\r\n\r\n    for (let i = 0; i < 24; i++) {\r\n      currDate.setDate(currDate.getDate() + 1);\r\n\r\n      let txtDate = (currDate.getMonth() + 1 ) + '-' + currDate.getDate() + '-' + currDate.getFullYear();\r\n\r\n      await axios.get('https://covid19.mathdro.id/api/daily/' + txtDate)\r\n        .then(res => {\r\n          let totalConfirmed = 0;\r\n          let totalRecovered = 0;\r\n          let totalDeaths = 0;\r\n          res.data.forEach((data) => {\r\n            totalConfirmed += parseInt(data.confirmed);\r\n            totalRecovered += parseInt(data.recovered);\r\n            totalDeaths += parseInt(data.deaths);\r\n          })\r\n          arrCases.push({txtDate, totalConfirmed, totalRecovered, totalDeaths});\r\n        })\r\n        .catch(error => {\r\n          console.log(error.response)\r\n        });\r\n    }\r\n\r\n    this.setState({\r\n      dailyCases: arrCases\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {dailyCases} = this.state;\r\n    console.log(dailyCases);\r\n    const dailyCasesData = dailyCases.length ? (\r\n      <div>\r\n        <DailyLineChart dailyCases={dailyCases} />\r\n        <HistoryTable dailyCases={dailyCases} />\r\n      </div>\r\n    ) : (\r\n      <Preloader />\r\n    )\r\n    return (\r\n      <div>\r\n        <h5>Global Daily Reports</h5>\r\n        <hr />\r\n        {dailyCasesData}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GlobalDailyStatus\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Preloader from './Preloader';\r\nimport { getLocation } from '../utils/';\r\nimport DailyLineChart from './charts/DailyLineChart';\r\nimport HistoryTable from './HistoryTable';\r\n\r\nclass CountryDailyStatus extends Component {\r\n\r\n  state = {\r\n    dailyCases: [],\r\n    countryName: '',\r\n  }\r\n  async componentDidMount() {\r\n    let currDate = new Date();\r\n    currDate.setDate(currDate.getDate() - 25);\r\n\r\n    const location = await getLocation();\r\n    let arrCases = [];\r\n    \r\n    this.setState({\r\n      countryName: location.countryName\r\n    });\r\n\r\n    for (let id = 0; id < 24; id++) {\r\n      currDate.setDate(currDate.getDate() + 1);\r\n\r\n      let txtDate = (currDate.getMonth() + 1 ) + '-' + currDate.getDate() + '-' + currDate.getFullYear();\r\n\r\n      await axios.get('https://covid19.mathdro.id/api/daily/' + txtDate)\r\n        .then(res => {\r\n          let totalConfirmed = 0;\r\n          let totalRecovered = 0;\r\n          let totalDeaths = 0;\r\n          \r\n          res.data.forEach((data) => {\r\n            if (data.countryRegion === location.countryName) {\r\n              totalConfirmed = parseInt(data.confirmed);\r\n              totalRecovered = parseInt(data.recovered);\r\n              totalDeaths = parseInt(data.deaths);\r\n            }\r\n          })\r\n          arrCases.push({id, txtDate, totalConfirmed, totalDeaths, totalRecovered});\r\n        })\r\n        .catch(error => {\r\n          console.log(error.response)\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      dailyCases: arrCases\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {dailyCases} = this.state;\r\n    const dailyCasesData = dailyCases.length ? (\r\n      <div>\r\n        <DailyLineChart dailyCases={dailyCases} />\r\n        <HistoryTable dailyCases={dailyCases} />\r\n      </div>\r\n    ) : (\r\n      <Preloader />\r\n    )\r\n    return (\r\n      <div>\r\n        <h5>{this.state.countryName} Daily Reports</h5>\r\n        <span className=\"grey-text small-text\"><b>Note:</b> The data in this section is delayed. However, the latest statistics would be displayed in the home page.</span>\r\n        <hr />\r\n        {dailyCasesData}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CountryDailyStatus\r\n","import React, { Component } from 'react';\r\nimport { HashRouter, Switch, Route, Link } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport Worldwide from './components/Worldwide';\r\nimport GlobalDailyStatus from './components/GlobalDailyStatus';\r\nimport CountryDailyStatus from './components/CountryDailyStatus';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter basename='/'>\r\n        <div className=\"App\">\r\n          <div className=\"row blue darken-4 header\">\r\n            <div className=\"col s12 m9\">\r\n            <Link to='/'><h5>COVID-19 Pandemic Status</h5></Link>\r\n            </div>\r\n            <div className=\"col s12 m3\">\r\n              <a href=\"https://github.com/kennethesguerra/covid-19-stat\"><i className=\"fab fa-github fa-3x right\"></i></a>\r\n            </div>\r\n          </div>\r\n          <div className=\"home-page container\">\r\n            <Switch>\r\n              <Route exact path='/' component={Home}></Route>\r\n              <Route exact path='/worldwide' component={Worldwide}></Route>\r\n              <Route exact path='/daily' component={GlobalDailyStatus}></Route>\r\n              <Route exact path='/daily/country' component={CountryDailyStatus}></Route>\r\n            </Switch>\r\n          </div>\r\n          <p className=\"center grey-text\">Visualization by<a href='http://github.com/kennethesguerra'> @kennethesguerra</a><br />\r\n          Data access from John Hopkins University CSSE via <a href=\"http://github.com/mathdroid\"> @mathdroid</a>'s Covid-19 API</p>\r\n        </div>\r\n      </HashRouter>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}